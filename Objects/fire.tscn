[gd_scene load_steps=45 format=3 uid="uid://vfloha6x3wmi"]

[ext_resource type="Texture2D" uid="uid://e3dp8tv7l01p" path="res://assets/Particle FX 1.2 Free/Spritesheets/Fire+Sparks-Sheet.png" id="1_a8ahh"]
[ext_resource type="Texture2D" uid="uid://dklo4wrbyc3oh" path="res://assets/Particle FX 1.2 Free/Spritesheets/Smoke-Sheet.png" id="3_mcfug"]

[sub_resource type="GDScript" id="GDScript_dn48o"]
script/source = "extends CharacterBody2D

@onready var sprite = $AnimatedSprite2D
@onready var spawn_timer = $Timer  # Reference to the Timer node

const MIN_TIME = 10
const MAX_TIME = 15
const SPAWN_RADIUS = 150  # Distance to spawn new fire
const MIN_SPACING = 50    # Minimum spacing to prevent overlap
const GROUP_NAME = \"fire_spread\"  # Group for tracking fires

func _ready() -> void:
	if GameManager.fires_left < 0:
		GameManager.fires_left = 0
	GameManager.fires_left += 1
	sprite.play(\"active\")
	add_to_group(GROUP_NAME)  # Track this instance as fire
	start_spawn_timer()  # Begin the spreading cycle
	add_to_group(\"fire\")

func _process(delta: float) -> void:
	if sprite.animation != \"active\":
		sprite.play(\"active\")

func start_spawn_timer():
	var wait_time = randf_range(MIN_TIME, MAX_TIME)
	spawn_timer.wait_time = wait_time  # Random delay before spawning
	spawn_timer.start()  # Start the timer

func _on_timer_timeout() -> void:
	if !is_duplicate_too_close():  # Ensure no overlapping fires
		spawn_fire()
	start_spawn_timer()  # Restart spreading cycle

func is_duplicate_too_close() -> bool:
	for node in get_tree().get_nodes_in_group(GROUP_NAME):
		if node != self and node.position.distance_to(self.position) < MIN_SPACING:
			return true  # Fire too close, don't spawn new one
	return false

func spawn_fire():
	var new_fire = duplicate()

	# Get all TileMapLayers in the scene
	var tilemap_layers = get_tree().get_nodes_in_group(\"flammable\")

	if tilemap_layers.is_empty():
		print(\"‚ùå No TileMapLayer found in 'flammable' group!\")
		return

	# Try up to 10 times to find a valid position
	var tries = 10
	while tries > 0:
		var offset = Vector2(randf_range(-SPAWN_RADIUS, SPAWN_RADIUS), randf_range(-SPAWN_RADIUS, SPAWN_RADIUS))
		var new_position = self.position + offset
		var valid_position = false

		# Check each TileMapLayer for a flammable tile at this position
		for layer in tilemap_layers:
			var tile_coords = layer.local_to_map(new_position)
			var tile_source = layer.get_cell_source_id(tile_coords)

			# Debugging output
			print(\"üîé Checking Tile:\", tile_coords, \" in Layer:\", layer.name, \"| Source ID:\", tile_source)

			if tile_source != -1:  # Found a flammable tile
				# Snap the fire to the tile grid
				new_fire.position = layer.map_to_local(tile_coords)  # Use map_to_local to ensure proper alignment
				valid_position = true
				break  # Stop checking once we find a valid tile

		if valid_position:
			get_parent().add_child(new_fire)  # Add new fire to scene
			print(\"üî• Fire spawned at:\", new_fire.position)
			return  # Stop after successful placement

		tries -= 1

	print(\"‚ö†Ô∏è No valid fire position found.\")
"

[sub_resource type="AtlasTexture" id="AtlasTexture_4p8mi"]
atlas = ExtResource("1_a8ahh")
region = Rect2(0, 0, 96, 96)

[sub_resource type="AtlasTexture" id="AtlasTexture_1uyrg"]
atlas = ExtResource("1_a8ahh")
region = Rect2(96, 0, 96, 96)

[sub_resource type="AtlasTexture" id="AtlasTexture_j5wvw"]
atlas = ExtResource("1_a8ahh")
region = Rect2(192, 0, 96, 96)

[sub_resource type="AtlasTexture" id="AtlasTexture_a0hjh"]
atlas = ExtResource("1_a8ahh")
region = Rect2(288, 0, 96, 96)

[sub_resource type="AtlasTexture" id="AtlasTexture_lh7hw"]
atlas = ExtResource("1_a8ahh")
region = Rect2(0, 96, 96, 96)

[sub_resource type="AtlasTexture" id="AtlasTexture_c1dsf"]
atlas = ExtResource("1_a8ahh")
region = Rect2(96, 96, 96, 96)

[sub_resource type="AtlasTexture" id="AtlasTexture_86n3p"]
atlas = ExtResource("1_a8ahh")
region = Rect2(192, 96, 96, 96)

[sub_resource type="AtlasTexture" id="AtlasTexture_eycdv"]
atlas = ExtResource("1_a8ahh")
region = Rect2(288, 96, 96, 96)

[sub_resource type="AtlasTexture" id="AtlasTexture_teq6u"]
atlas = ExtResource("1_a8ahh")
region = Rect2(0, 192, 96, 96)

[sub_resource type="AtlasTexture" id="AtlasTexture_qudpx"]
atlas = ExtResource("1_a8ahh")
region = Rect2(96, 192, 96, 96)

[sub_resource type="AtlasTexture" id="AtlasTexture_1vka7"]
atlas = ExtResource("1_a8ahh")
region = Rect2(192, 192, 96, 96)

[sub_resource type="AtlasTexture" id="AtlasTexture_qgnxu"]
atlas = ExtResource("1_a8ahh")
region = Rect2(288, 192, 96, 96)

[sub_resource type="AtlasTexture" id="AtlasTexture_luwp6"]
atlas = ExtResource("1_a8ahh")
region = Rect2(0, 288, 96, 96)

[sub_resource type="AtlasTexture" id="AtlasTexture_ufe2y"]
atlas = ExtResource("1_a8ahh")
region = Rect2(96, 288, 96, 96)

[sub_resource type="AtlasTexture" id="AtlasTexture_sw2bo"]
atlas = ExtResource("1_a8ahh")
region = Rect2(192, 288, 96, 96)

[sub_resource type="AtlasTexture" id="AtlasTexture_5uk8s"]
atlas = ExtResource("1_a8ahh")
region = Rect2(288, 288, 96, 96)

[sub_resource type="AtlasTexture" id="AtlasTexture_x4j8h"]
atlas = ExtResource("1_a8ahh")
region = Rect2(0, 384, 96, 96)

[sub_resource type="AtlasTexture" id="AtlasTexture_pvnwc"]
atlas = ExtResource("1_a8ahh")
region = Rect2(96, 384, 96, 96)

[sub_resource type="AtlasTexture" id="AtlasTexture_qo18a"]
atlas = ExtResource("1_a8ahh")
region = Rect2(192, 384, 96, 96)

[sub_resource type="AtlasTexture" id="AtlasTexture_pxsv2"]
atlas = ExtResource("3_mcfug")
region = Rect2(0, 0, 80, 80)

[sub_resource type="AtlasTexture" id="AtlasTexture_h6pgo"]
atlas = ExtResource("3_mcfug")
region = Rect2(80, 0, 80, 80)

[sub_resource type="AtlasTexture" id="AtlasTexture_aaqo8"]
atlas = ExtResource("3_mcfug")
region = Rect2(160, 0, 80, 80)

[sub_resource type="AtlasTexture" id="AtlasTexture_qjpwn"]
atlas = ExtResource("3_mcfug")
region = Rect2(240, 0, 80, 80)

[sub_resource type="AtlasTexture" id="AtlasTexture_ylfo6"]
atlas = ExtResource("3_mcfug")
region = Rect2(0, 80, 80, 80)

[sub_resource type="AtlasTexture" id="AtlasTexture_35krp"]
atlas = ExtResource("3_mcfug")
region = Rect2(80, 80, 80, 80)

[sub_resource type="AtlasTexture" id="AtlasTexture_15clg"]
atlas = ExtResource("3_mcfug")
region = Rect2(160, 80, 80, 80)

[sub_resource type="AtlasTexture" id="AtlasTexture_cmg18"]
atlas = ExtResource("3_mcfug")
region = Rect2(240, 80, 80, 80)

[sub_resource type="AtlasTexture" id="AtlasTexture_pxppf"]
atlas = ExtResource("3_mcfug")
region = Rect2(0, 160, 80, 80)

[sub_resource type="AtlasTexture" id="AtlasTexture_tukym"]
atlas = ExtResource("3_mcfug")
region = Rect2(80, 160, 80, 80)

[sub_resource type="AtlasTexture" id="AtlasTexture_kvq86"]
atlas = ExtResource("3_mcfug")
region = Rect2(160, 160, 80, 80)

[sub_resource type="AtlasTexture" id="AtlasTexture_otidj"]
atlas = ExtResource("3_mcfug")
region = Rect2(240, 160, 80, 80)

[sub_resource type="AtlasTexture" id="AtlasTexture_id0kd"]
atlas = ExtResource("3_mcfug")
region = Rect2(0, 240, 80, 80)

[sub_resource type="AtlasTexture" id="AtlasTexture_bcqsu"]
atlas = ExtResource("3_mcfug")
region = Rect2(80, 240, 80, 80)

[sub_resource type="AtlasTexture" id="AtlasTexture_qetex"]
atlas = ExtResource("3_mcfug")
region = Rect2(160, 240, 80, 80)

[sub_resource type="AtlasTexture" id="AtlasTexture_74trg"]
atlas = ExtResource("3_mcfug")
region = Rect2(240, 240, 80, 80)

[sub_resource type="AtlasTexture" id="AtlasTexture_hjuvu"]
atlas = ExtResource("3_mcfug")
region = Rect2(0, 320, 80, 80)

[sub_resource type="AtlasTexture" id="AtlasTexture_1dsbl"]
atlas = ExtResource("3_mcfug")
region = Rect2(80, 320, 80, 80)

[sub_resource type="AtlasTexture" id="AtlasTexture_pwtf0"]
atlas = ExtResource("3_mcfug")
region = Rect2(160, 320, 80, 80)

[sub_resource type="SpriteFrames" id="SpriteFrames_utg3j"]
animations = [{
"frames": [{
"duration": 1.0,
"texture": SubResource("AtlasTexture_4p8mi")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_1uyrg")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_j5wvw")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_a0hjh")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_lh7hw")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_c1dsf")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_86n3p")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_eycdv")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_teq6u")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_qudpx")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_1vka7")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_qgnxu")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_luwp6")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_ufe2y")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_sw2bo")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_5uk8s")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_x4j8h")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_pvnwc")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_qo18a")
}],
"loop": true,
"name": &"active",
"speed": 24.0
}, {
"frames": [{
"duration": 1.0,
"texture": SubResource("AtlasTexture_pxsv2")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_h6pgo")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_aaqo8")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_qjpwn")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_ylfo6")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_35krp")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_15clg")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_cmg18")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_pxppf")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_tukym")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_kvq86")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_otidj")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_id0kd")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_bcqsu")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_qetex")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_74trg")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_hjuvu")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_1dsbl")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_pwtf0")
}],
"loop": true,
"name": &"smoke",
"speed": 24.0
}]

[sub_resource type="CapsuleShape2D" id="CapsuleShape2D_a3x86"]
radius = 19.0
height = 52.0

[sub_resource type="CapsuleShape2D" id="CapsuleShape2D_fq386"]
radius = 17.0
height = 52.0

[node name="Fire" type="CharacterBody2D"]
script = SubResource("GDScript_dn48o")

[node name="AnimatedSprite2D" type="AnimatedSprite2D" parent="."]
position = Vector2(0, -37)
sprite_frames = SubResource("SpriteFrames_utg3j")
animation = &"active"
frame = 3
frame_progress = 0.282228

[node name="CollisionShape2D" type="CollisionShape2D" parent="."]
position = Vector2(0, -11)
shape = SubResource("CapsuleShape2D_a3x86")

[node name="Fire_Hurtbox" type="Area2D" parent="."]

[node name="CollisionShape2D" type="CollisionShape2D" parent="Fire_Hurtbox"]
position = Vector2(-1, -10)
shape = SubResource("CapsuleShape2D_fq386")

[node name="Timer" type="Timer" parent="."]

[connection signal="timeout" from="Timer" to="." method="_on_timer_timeout"]
